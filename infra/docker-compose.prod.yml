services:
  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - web
      - api
    ports:
      - "8085:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - appnet

  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_BASE: /api
    depends_on:
      - api
    networks:
      - appnet

  api:
    build:
      context: ..
      dockerfile: apps/api/Dockerfile
    env_file:
      - ./env.prod
    environment:
      NODE_ENV: production
      RECS_URL: http://recs:5000
    depends_on:
      - postgres
      - mongo
      - recs
    networks:
      - appnet

  recs:
    build:
      context: ..
      dockerfile: apps/recs/Dockerfile
    networks:
      - appnet

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ./env.prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: shop
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet

  mongo:
    image: mongo:6
    restart: unless-stopped
    volumes:
      - mongodata:/data/db
    networks:
      - appnet

volumes:
  pgdata:
  mongodata:

networks:
  appnet:
    driver: bridge
