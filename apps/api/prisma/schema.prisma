generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  role         Role      @default(customer)
  createdAt    DateTime  @default(now())
  orders       Order[]
  events       Event[]
  addresses    Address[]
}

enum Role {
  customer
  admin
}

model Address {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  label      String?
  fullName   String
  line1      String
  line2      String?
  city       String
  state      String?
  postalCode String
  country    String
  phone      String?
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ShippingOption {
  id               String   @id @default(uuid())
  name             String
  description      String?
  amount           Int
  estimatedDaysMin Int?
  estimatedDaysMax Int?
  active           Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  orders           Order[]
}

model Order {
  id               String       @id @default(uuid())
  user             User         @relation(fields: [userId], references: [id])
  userId           String
  sessionId        String?
  subtotal         Int          @default(0)
  taxAmount        Int          @default(0)
  shippingAmount   Int          @default(0)
  discountAmount   Int          @default(0)
  total            Int
  currency         String
  promoCode        String?
  status           OrderStatus  @default(pending)
  createdAt        DateTime     @default(now())
  shippingAddress  Json?
  shippingOption   ShippingOption? @relation(fields: [shippingOptionId], references: [id])
  shippingOptionId String?
  items            OrderItem[]
  payment          Payment?
}

enum OrderStatus {
  pending
  paid
  canceled
}

model OrderItem {
  id             String @id @default(uuid())
  order          Order  @relation(fields: [orderId], references: [id])
  orderId        String
  productId      String
  title          String?
  price          Int
  qty            Int
  variantId      String?
  variantLabel   String?
  variantOptions Json?
}

model Payment {
  id                    String   @id @default(uuid())
  order                 Order    @relation(fields: [orderId], references: [id])
  orderId               String   @unique
  provider              String   @default("stripe")
  stripePaymentIntentId String?
  amount                Int
  status                String
  metadata              Json?
  createdAt             DateTime @default(now())
}

model Event {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  type      String
  payload   Json
  createdAt DateTime @default(now())
}
